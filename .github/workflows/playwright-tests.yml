name: Playwright Tests

on:
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run every 4 hours (0 */4 * * *)
    - cron: '0 */4 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Optimal sharding for GitHub Actions free plan
        # 4 shards = 4 parallel jobs, each with 1 worker = efficient resource usage
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: System Resource Check
      run: |
        echo "Available system resources:"
        free -h
        nproc
        echo "Node.js memory limit will be set to 4GB"
    
    - name: Run Playwright tests
      run: npm run test:ci-sharded -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        CI: true
        ENV: ci
        BASE_URL: https://opensource-demo.orangehrmlive.com
        ORANGEHRM_BASE_URL: https://opensource-demo.orangehrmlive.com
        ORANGEHRM_USERNAME: Admin
        ORANGEHRM_PASSWORD: admin123
        HEADLESS: true
    
    - name: Post-Test Resource Check
      if: always()
      run: |
        echo "Final system resource usage:"
        free -h
        df -h
        echo "Test execution completed for shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }}"
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
    
    - name: Upload Traces
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-traces
        path: test-results/**/trace.zip
        retention-days: 30

    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## Playwright Test Results\n\n';
          
          try {
            // Try to read test results
            if (fs.existsSync('playwright-report/index.html')) {
              comment += 'Tests completed successfully!\n';
              comment += 'Single consolidated report from all shards.\n\n';
              comment += 'Test Artifacts:\n';
              comment += '- Playwright Report: https://github.com/' + context.repo.owner + '/' + context.repo.repo + '/actions/runs/' + context.runId + '\n';
              comment += '- Shard: ' + context.job + '-' + context.runId + '\n';
              if (context.payload.pull_request) {
                comment += '- Branch: ' + context.payload.pull_request.head.ref + '\n';
                comment += '- Commit: ' + context.payload.pull_request.head.sha.substr(0, 7) + '\n';
              }
            } else {
              comment += 'Tests may have failed. Check the action logs for details.\n';
            }
          } catch (error) {
            comment += 'Could not parse test results: ' + error.message + '\n';
          }
          
          if (context.payload.pull_request) {
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }